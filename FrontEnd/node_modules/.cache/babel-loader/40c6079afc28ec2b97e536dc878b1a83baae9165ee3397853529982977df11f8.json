{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"SGYUNG 당신의 AI 스포츠 심판\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"time-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.youtubeLink = $event),\n    placeholder: \"Enter YouTube link\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.youtubeLink]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.groundTruthScore = $event),\n    type: \"number\",\n    placeholder: \"Enter Ground Truth Score (Optional)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.groundTruthScore, void 0, {\n    number: true\n  }]]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.startTime = $event),\n    type: \"text\",\n    placeholder: \"Enter Start Time (Optional, e.g. 01:30)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startTime]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.endTime = $event),\n    type: \"text\",\n    placeholder: \"Enter End Time (Optional, e.g. 03:00)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endTime]])]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.submitLink && $options.submitLink(...args))\n  }, \"Submit\")]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_cache","$event","$data","youtubeLink","placeholder","groundTruthScore","type","number","_hoisted_2","startTime","endTime","onClick","args","$options","submitLink"],"sources":["/Users/kjinh/Desktop/Sports-Police/FrontEnd/src/components/InputPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>SGYUNG 당신의 AI 스포츠 심판</h1>\r\n      <input v-model=\"youtubeLink\" placeholder=\"Enter YouTube link\" />\r\n      <input v-model.number=\"groundTruthScore\" type=\"number\" placeholder=\"Enter Ground Truth Score (Optional)\" />\r\n      \r\n      <div class=\"time-buttons\">\r\n        <input v-model=\"startTime\" type=\"text\" placeholder=\"Enter Start Time (Optional, e.g. 01:30)\" />\r\n        <input v-model=\"endTime\" type=\"text\" placeholder=\"Enter End Time (Optional, e.g. 03:00)\" />\r\n      </div>\r\n      \r\n      <button @click=\"submitLink\">Submit</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        youtubeLink: '',\r\n        groundTruthScore: null, // Optional Ground Truth score\r\n        startTime: '', // (Optional)\r\n        endTime: '' // (Optional)\r\n      };\r\n    },\r\n    methods: {\r\n      submitLink() { // Push to LoadingPage with the YouTube link\r\n        if (this.youtubeLink.trim()) {\r\n\r\n          const startTime = this.startTime.trim() || \"FULL_VIDEO\";\r\n          const endTime = this.endTime.trim() || \"FULL_VIDEO\";\r\n\r\n          this.$router.push({ \r\n            name: 'LoadingPage', \r\n            query: { \r\n              link: this.youtubeLink,\r\n              gt_score: this.groundTruthScore, // GT 점수\r\n              start_time: startTime, // 시작 시간\r\n              end_time: endTime // 끝 시간\r\n            } \r\n          });\r\n        } else {\r\n          alert('Please enter a valid YouTube link.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  input {\r\n    display: block;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    width: 80%;\r\n  }\r\n  \r\n  .time-buttons {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 20px auto;\r\n  width: 80%;\r\n}\r\n\r\nbutton {\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n  </style>\r\n  "],"mappings":";gCAEMA,mBAAA,CAA6B,YAAzB,sBAAoB;;EAInBC,KAAK,EAAC;AAAc;;uBAL3BC,mBAAA,CAWM,cAVJC,UAA6B,E,gBAC7BH,mBAAA,CAAgE;IAHtE,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAzBF,KAAA,CAAAC,WAAW,E,mBAC3BP,mBAAA,CAA2G;IAJjH,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI6BC,KAAA,CAAAG,gBAAgB,GAAAJ,MAAA;IAAEK,IAAI,EAAC,QAAQ;IAACF,WAAW,EAAC;iDAA5CF,KAAA,CAAAG,gBAAgB,E;IAJ7CE,MAAA,EAIa;EAAiC,E,IAExCX,mBAAA,CAGM,OAHNY,UAGM,G,gBAFJZ,mBAAA,CAA+F;IAPvG,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOwBC,KAAA,CAAAO,SAAS,GAAAR,MAAA;IAAEK,IAAI,EAAC,MAAM;IAACF,WAAW,EAAC;iDAAnCF,KAAA,CAAAO,SAAS,E,mBACzBb,mBAAA,CAA2F;IARnG,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQwBC,KAAA,CAAAQ,OAAO,GAAAT,MAAA;IAAEK,IAAI,EAAC,MAAM;IAACF,WAAW,EAAC;iDAAjCF,KAAA,CAAAQ,OAAO,E,KAGzBd,mBAAA,CAA2C;IAAlCe,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}