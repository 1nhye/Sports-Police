{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      gtScore: null,\n      // Ground Truth Score\n      report: null,\n      // 모델의 HTML report\n      question: '',\n      answer: '',\n      qaEnabled: true // 기본적으로 QA 기능 활성화\n    };\n  },\n  created() {\n    //this.gtScore = this.$route.query.gt_score !== undefined ? parseFloat(this.$route.query.gt_score) : null;\n    this.gtScore = this.$route.query.gt_score;\n    this.report = this.$route.query.report;\n  },\n  methods: {\n    async submitQuestion() {\n      try {\n        const response = await axios.post('http://localhost:8000/qa', {\n          question: this.question\n        });\n        this.answer = response.data.answer;\n      } catch (error) {\n        console.error('Error: ', error);\n        alert('Failed to get an answer. Please try again later.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","gtScore","report","question","answer","qaEnabled","created","$route","query","gt_score","methods","submitQuestion","response","post","error","console","alert"],"sources":["/Users/kjinh/Desktop/Sports-Police/FrontEnd/src/components/OutputPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>SGYUNG 당신의 AI 스포츠 심판</h1>\r\n\r\n      <!-- GT score -->\r\n      <div v-if=\"gtScore !== null\">\r\n        <h2>Ground Truth Score: {{ gtScore }}</h2>\r\n      </div>\r\n\r\n      <div v-html=\"report\"></div>\r\n      <!-- 추가 질문을 위한 섹션 -->\r\n      <div v-if=\"qaEnabled\">\r\n        <h2>Ask a Question:</h2>\r\n        <input v-model=\"question\" placeholder=\"Enter your question here\" />\r\n        <button @click=\"submitQuestion\">Submit</button>\r\n\r\n        <p v-if=\"answer\">Answer: {{ answer }}</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n\r\n\r\n\r\n  <script>\r\n  import axios from \"axios\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        gtScore: null,  // Ground Truth Score\r\n        report: null, // 모델의 HTML report\r\n        question: '',\r\n        answer: '',\r\n        qaEnabled: true // 기본적으로 QA 기능 활성화\r\n      };\r\n    },\r\n    created() {\r\n      //this.gtScore = this.$route.query.gt_score !== undefined ? parseFloat(this.$route.query.gt_score) : null;\r\n      this.gtScore = this.$route.query.gt_score\r\n      this.report = this.$route.query.report;\r\n    },\r\n    methods: {\r\n      async submitQuestion() {\r\n        try {\r\n          const response = await axios.post('http://localhost:8000/qa', {\r\n            question: this.question,\r\n          });\r\n          this.answer = response.data.answer;\r\n        } catch (error) {\r\n          console.error('Error: ', error);\r\n          alert('Failed to get an answer. Please try again later.');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n    font-size: 22px;\r\n  }\r\n  \r\n  input {\r\n    display: block;\r\n    margin: 20px auto;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    width: 80%;\r\n  }\r\n  \r\n  button {\r\n    display: block;\r\n    margin: 20px auto;\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  p {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    margin: 20px 0;\r\n  }\r\n  </style>"],"mappings":"AAyBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MAAG;MAChBC,MAAM,EAAE,IAAI;MAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,IAAG,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACL,OAAM,GAAI,IAAI,CAACM,MAAM,CAACC,KAAK,CAACC,QAAO;IACxC,IAAI,CAACP,MAAK,GAAI,IAAI,CAACK,MAAM,CAACC,KAAK,CAACN,MAAM;EACxC,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,0BAA0B,EAAE;UAC5DV,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACF,IAAI,CAACC,MAAK,GAAIQ,QAAQ,CAACZ,IAAI,CAACI,MAAM;MACpC,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BE,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}