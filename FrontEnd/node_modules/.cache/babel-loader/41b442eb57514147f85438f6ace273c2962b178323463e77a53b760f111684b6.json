{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  mounted() {\n    this.goToOutputPage();\n  },\n  methods: {\n    async goToOutputPage() {\n      // Analyze the video and push to OutputPage\n      try {\n        const youtubeLink = this.$route.query.link;\n        if (!youtubeLink) {\n          throw new Error('YouTube link is missing.');\n        }\n        console.log(\"reach here\");\n        // send a POST request to the backend\n        const response = await fetch('http://localhost:8000/analyze', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            url: youtubeLink\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json();\n\n        // Push to OutputPage with the result\n        this.$router.push({\n          // Push to OutputPage with the result\n          name: 'OutputPage',\n          query: {\n            report: result.report\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Failed to analyze video. Please try again later.');\n\n        // Redirect to InputPage\n        this.$router.push({\n          name: 'InputPage'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mounted","goToOutputPage","methods","youtubeLink","$route","query","link","Error","console","log","response","fetch","method","headers","body","JSON","stringify","url","ok","status","result","json","$router","push","name","report","error","alert"],"sources":["/Users/kjinh/Desktop/Sports-Police/FrontEnd/src/components/LoadingPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>SGYUNG 당신의 AI 스포츠 심판</h1>\r\n      <p>Loading...</p>\r\n      <!-- 채점하기 버튼 추가 -->\r\n      <!-- <button @click=\"goToOutputPage\">채점하기</button> -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    mounted() {\r\n      this.goToOutputPage();\r\n    },\r\n\r\n    methods: {\r\n      async goToOutputPage() { // Analyze the video and push to OutputPage\r\n        try {\r\n\r\n          const youtubeLink = this.$route.query.link;\r\n          if (!youtubeLink) {\r\n            throw new Error('YouTube link is missing.');\r\n          }\r\n          console.log(\"reach here\");\r\n          // send a POST request to the backend\r\n          const response = await fetch('http://localhost:8000/analyze', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ url: youtubeLink }),\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n\r\n          const result = await response.json();\r\n\r\n\r\n          // Push to OutputPage with the result\r\n          this.$router.push({ // Push to OutputPage with the result\r\n            name: 'OutputPage',\r\n            query: {\r\n              report: result.report\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('Failed to analyze video. Please try again later.');\r\n\r\n          // Redirect to InputPage\r\n          this.$router.push({ name: 'InputPage' });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  p {\r\n    text-align: center;\r\n    font-size: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAUE,eAAe;EACbA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MAAE;MACvB,IAAI;QAEF,MAAME,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI;QAC1C,IAAI,CAACH,WAAW,EAAE;UAChB,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACAC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,GAAG,EAAEd;UAAY,CAAC;QAC3C,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIX,KAAK,CAAC,uBAAuBG,QAAQ,CAACS,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,MAAK,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;QAGpC;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAE;UAClBC,IAAI,EAAE,YAAY;UAClBnB,KAAK,EAAE;YACLoB,MAAM,EAAEL,MAAM,CAACK;UACjB;QACF,CAAC,CAAC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BC,KAAK,CAAC,kDAAkD,CAAC;;QAEzD;QACA,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,CAAC;MAC1C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}